<Window x:Class="Chat.Client.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="MainWindow" Height="500" Width="850">
    <Window.Resources>
        <DataTemplate x:Key="ChatRoomTemplate">
            <ListView Background="Blue"></ListView>
        </DataTemplate>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="3*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>
            <ListView Name="UsersList" ItemsSource="{Binding Users}" Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" HorizontalContentAlignment="Stretch">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <DockPanel LastChildFill="True" HorizontalAlignment="Stretch">
                            <CheckBox IsChecked="{Binding IsOnline}" IsEnabled="False" DockPanel.Dock="Right"/>
                            <TextBlock Text=" Online: " DockPanel.Dock="Right"/>
                            <TextBlock Text="{Binding Name}" FontWeight="Bold" DockPanel.Dock="Left"/>
                    </DockPanel>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        
        <TabControl ItemsSource="{Binding Rooms}" Grid.Column="1" Grid.Row="0">
            <TabControl.Resources>
                <Style TargetType="TabItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TabItem">
                                <Border BorderThickness="1,1,1,0" CornerRadius="4,4,0,0" Margin="2,0" Name="Border" Padding="3">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="Room: "/>
                                        <TextBlock Text="{Binding Name}" FontWeight="Bold"/>
                                        <TextBlock Text=" observing:"></TextBlock>
                                        <CheckBox IsChecked="{Binding IsRoomEnabled}"></CheckBox>
                                    </StackPanel>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="Border" Property="Background" Value="LightSkyBlue" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="False">
                                        <Setter TargetName="Border" Property="Background" Value="GhostWhite" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>                
            </TabControl.Resources>
            <TabControl.ContentTemplate>
                <DataTemplate>
                    <Grid IsEnabled="{Binding IsRoomEnabled}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <ListView ItemsSource="{Binding Messages}" HorizontalContentAlignment="Stretch" Grid.Column="0" Grid.ColumnSpan="2">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Grid HorizontalAlignment="Stretch">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{Binding Sender, Mode=OneTime}" Grid.Column="0" Grid.Row="0" FontWeight="Bold" Margin="3"/>
                                        <TextBlock Text="{Binding MsgTime, Mode=OneTime}" Grid.Column="1" Grid.Row="0" FontStretch="Condensed" Margin="3"/>
                                        <TextBlock Text="{Binding Message, Mode=OneTime}" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" FontStyle="Italic" Margin="3" TextWrapping="Wrap"/>
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                        <TextBox Grid.Column="0" Grid.Row="1" Margin="3" Text="{Binding InputMessage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <Button Grid.Column="1" Grid.Row="1" Content="Send" MinWidth="75" Margin="3" Command="{Binding SendMessage}" IsDefault="True"/>
                    </Grid>
                </DataTemplate>
            </TabControl.ContentTemplate>
        </TabControl>
        
          <!--  <DataGrid Grid.Row="0" Grid.Column="1" SelectionMode="Extended" IsReadOnly="True" Name="accessPointsGrid" AutoGenerateColumns="False">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Accesss Point" Binding="{Binding Path=AccessPoint}"></DataGridTextColumn>
                    <DataGridTextColumn Header="Type" Binding="{Binding Path=AccessPointType}"></DataGridTextColumn>
                    <DataGridTextColumn Header="Lock" Binding="{Binding Path=Lock}"></DataGridTextColumn>
                    <DataGridTemplateColumn Header="Try access!">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Content="Access" Command="{Binding Path=TryAccess}"></Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="Access Result" Binding="{Binding Path=LastActionResult}"></DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>    -->
    </Grid>
</Window>
